# Generated by Django 5.2.7 on 2025-10-14 05:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DiscoveryBatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "source_name",
                    models.CharField(
                        help_text="crawler identifier, e.g. steam_daily", max_length=100
                    ),
                ),
                ("run_started_at", models.DateTimeField()),
                ("run_completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "ingested_for_date",
                    models.DateField(
                        help_text="Business date the batch covers (typically UTC date)."
                    ),
                ),
                ("source_file", models.CharField(blank=True, max_length=255)),
                ("parameters", models.JSONField(blank=True, default=dict)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-ingested_for_date", "-run_started_at"],
                "indexes": [
                    models.Index(
                        fields=["ingested_for_date"],
                        name="core_discov_ingeste_12ab6a_idx",
                    ),
                    models.Index(
                        fields=["source_name", "run_started_at"],
                        name="core_discov_source__2f192f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("steam_appid", models.PositiveIntegerField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True, max_length=255)),
                ("steam_url", models.URLField(blank=True, max_length=500)),
                ("website", models.URLField(blank=True, max_length=500)),
                ("developers", models.CharField(blank=True, max_length=500)),
                ("publishers", models.CharField(blank=True, max_length=500)),
                ("categories", models.CharField(blank=True, max_length=500)),
                ("genres", models.CharField(blank=True, max_length=500)),
                ("tags", models.CharField(blank=True, max_length=500)),
                ("latest_release_date", models.CharField(blank=True, max_length=120)),
                ("latest_detection_stage", models.CharField(blank=True, max_length=50)),
                (
                    "latest_api_response_type",
                    models.CharField(blank=True, max_length=50),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-updated_at"],
                "indexes": [
                    models.Index(
                        fields=["steam_appid"], name="core_game_steam_a_492f61_idx"
                    ),
                    models.Index(fields=["name"], name="core_game_name_0495f2_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="WatchlistEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_detected", models.DateField(blank=True, null=True)),
                ("last_checked", models.DateField(blank=True, null=True)),
                ("status_history", models.JSONField(blank=True, default=list)),
                ("current_status", models.CharField(blank=True, max_length=50)),
                ("check_count", models.PositiveIntegerField(default=0)),
                ("latest_name", models.CharField(blank=True, max_length=255)),
                ("latest_type", models.CharField(blank=True, max_length=50)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="watchlist_entry",
                        to="core.game",
                    ),
                ),
            ],
            options={
                "ordering": ["game__name"],
            },
        ),
        migrations.CreateModel(
            name="GameSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("detection_stage", models.CharField(blank=True, max_length=50)),
                ("api_response_type", models.CharField(blank=True, max_length=50)),
                ("potential_duplicate", models.BooleanField(default=False)),
                ("discovery_date", models.DateField(blank=True, null=True)),
                ("ingested_for_date", models.DateField()),
                ("release_date_raw", models.CharField(blank=True, max_length=120)),
                ("description", models.TextField(blank=True)),
                ("supported_languages", models.CharField(blank=True, max_length=500)),
                ("followers", models.IntegerField(blank=True, null=True)),
                ("wishlists_est", models.IntegerField(blank=True, null=True)),
                ("wishlist_rank", models.IntegerField(blank=True, null=True)),
                ("source_categories", models.CharField(blank=True, max_length=500)),
                ("source_genres", models.CharField(blank=True, max_length=500)),
                ("source_tags", models.CharField(blank=True, max_length=500)),
                ("raw_payload", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "batch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="snapshots",
                        to="core.discoverybatch",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="snapshots",
                        to="core.game",
                    ),
                ),
            ],
            options={
                "ordering": ["-ingested_for_date", "-followers"],
                "indexes": [
                    models.Index(
                        fields=["ingested_for_date"],
                        name="core_gamesn_ingeste_21adbd_idx",
                    ),
                    models.Index(
                        fields=["followers"], name="core_gamesn_followe_c023c5_idx"
                    ),
                    models.Index(
                        fields=["wishlists_est"], name="core_gamesn_wishlis_457a90_idx"
                    ),
                ],
                "unique_together": {("game", "batch")},
            },
        ),
        migrations.CreateModel(
            name="SwipeAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("skip", "Skip"),
                            ("watchlist", "Add to Watchlist"),
                        ],
                        max_length=20,
                    ),
                ),
                ("note", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="swipe_actions",
                        to="core.discoverybatch",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swipe_actions",
                        to="core.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swipe_actions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="core_swipea_user_id_8ac305_idx",
                    ),
                    models.Index(
                        fields=["game", "created_at"],
                        name="core_swipea_game_id_80e3a3_idx",
                    ),
                    models.Index(
                        fields=["action"], name="core_swipea_action_22b769_idx"
                    ),
                ],
            },
        ),
    ]
